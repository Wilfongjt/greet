service: greet-gateway # NOTE: update this with your service name


provider:
  name: aws
  runtime: nodejs10.x
  # you can overwrite defaults here
  stage: ${opt:stage, 'dev'}
  region: ${opt:region, 'us-east-1'
  profile: ${self:custom.profiles.${self:provider.stage}}
  apiKeys: # apikey
    - serverless-apikeys-${self:provider.stage}-apikey
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "lambda:InvokeFunction"
      Resource: "*"
    - Effect: "Allow"
      Action:
        - "dynamodb:*"
      Resource: "*"
    - Effect: "Allow"
      Action:
        - "s3:*"
      Resource: "*"

# you can define service wide environment variables here
#  environment:
#    variable1: value1
  environment:
    SERVICE_NAME: ${self:service}
    #STAGE_NAME: ${self:provider.stage}
    # TABLE_NAME: documents_${self:provider.stage}

functions:
  hello:
    handler: handler.hello
    description: "Greet hello."
    events:
      - http:
          method: get
          path: hello
          cors: true
          private: true # apikey

plugins:
  - serverless-domain-manager

custom:
    #defaultStage: dev
    # use input stage otherwise use provider.stage
    stage: ${opt:stage, 'dev'}

    profiles:
      dev: devProfile
      prod: prodProfile
      test: testProfile

    domains:
      dev: dev-api.lyttlebit.com
      prod: api.lyttlebit.com
      test: test-api.lyttlebit.com

    customDomain:
      basePath: 'greet' # This will be prefixed to all routes
      endpointType: 'edge'
      # stage: ${self:provider.stage}
      # lookup domain based on stage
      domainName: "${self:custom.domains.${self:custom.stage}}" # Change this to your domain.
      certificateName: "${self:custom.domains.${self:custom.stage}}"
      createRoute53Record: true
